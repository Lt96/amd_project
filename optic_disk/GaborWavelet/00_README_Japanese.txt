[v1.06 -- 英語のREADMEと内容が全く同じわけではありません。]

視覚の脳科学の授業やtalk等で使うためのツールとしてのデモソフトの紹介です。
「２次元ガボール ウェーブレット変換と逆変換（再構成）のデモソフト」
2D Gabor Wavelet Transform and Inverse Transform (Reconstruction) Demo

元々は、Matlabのスクリプトとして作成されました。ここにあります。
2D Gabor Wavelet Transform and Inverse Transform (Reconstruction) Demo
using Matlab
http://visiome.neuroinf.jp/modules/xoonips/detail.php?item_id=6894

これをコンパイルして、Matlabが無くても使える様にした
Mac OS X専用のアプリケーションは下記からダウンロードできます。
Mac OSX: 2D Gabor Wavelet Transform and Inverse Transform (Reconstruction) Demo
http://visiome.neuroinf.jp/modules/xoonips/detail.php?item_id=6951

(Windows用は今のところありません。そのうちと思っていますが..）

ーーーーーーーーーーーーーー
目的（何のためのソフトか？）
ーーーーーーーーーーーーーー
大脳の一次視覚野(V1）の単純型細胞の受容野と、これらの細胞が
どのように視覚情報を表現しているかの説明に使うためのソフトを、
研究室の大学院生が作ってくれたので、公開します。

V1細胞の受容野がGabor関数で良く近似できること、これらの細胞が
様々な傾きの線やエッジに反応することはよく知られていますが、かといって
これらを「線やエッジの検出器」である表現するのは、行き過ぎで
間違いです。

現在では、V1の単純型細胞はウエーブレット変換に非常に似た形で、
元の画像情報を必要ならば再生できる程度には保持しながら
表現していると考えられています。脳は実際には画像の再現はやっていませんが。

ウエーブレット変換と細胞の関係を授業はまだしも、一般向けの公開講座等で
説明するのは、なかなか大変だったので、今回公開するようなデモソフトが
是非欲しいと思っていました。

このソフトがやる事は、
1. 任意の画像のGaborウエーブレット変換を計算し、表示すること
（右上の丸いプロットの下のボタンで別ウインドウが開きます。）
６つのスケールで８つの方位の単純型細胞を敷き詰めて、各細胞がどの程度
発火するかを、赤い色の濃さで表示していると、解釈できます。

2. ウインドウ中央下のボタンを押すと、反応の強い細胞から順に
N個の細胞の受容野（対応するGabor関数）の和をとって重ねていきます。
これをアニメーションとしてゆっくりと順番にやって見せます。
実はこれが、逆変換のプロセスそのものなのですが、こうすることで、
実際にV1の数多くの細胞によって、画像の情報がどのように表現
されているかを直感的に理解してもらおうという意図です。

つまり、各単純型細胞は画像に含まれる自分の受容野の形（場所、角度、スケールの決まった）
を表現しており、それが画像中に有ったという事を、発火により伝えています
[コントラスト（振幅、waveletの係数の値）が高ければ、より強く]。
その情報を全部集めれば、元画像が正確に表現できているということです。

---------------------------------------------------------------------
コンパイルしたMac版のインストールと使い方 (MacでMatlabをお持ちでない方)　
---------------------------------------------------------------------
[1m] 別フォルダに同梱のMatlab Compiler Runtime (MCR)をインストールして下さい。
　以前にMCRをインストールしたことがあれば必要ありません（今回は新バージョンにアップデート等）
   つまり、MCRInstaller/InstallForMacOSX.app を起動。
   "MCRInstaller"フォルダーに入り、 "InstallForMacOSX.app"をダブルクリック
   *デフォルトのインストールディレクトリーを使って下さい。他の場所を指定しないように。

[2m] ドラッグ＆ドロップで "GaborWavelet.app" を /Applications フォルダにコピーして下さい。
　　"test image"をホームディレクトリにコピーしてください。
   *"Option"キーを押しながら,ドラッグ＆ドロップでコピーになります。
    
[3m] GaborWavelet.app をダブルクリック

[4m] 後は下の[2]から続けてください。

------------------------------------------------------
Matlabスクリプト(Matlab環境をインストール済みの方):
------------------------------------------------------
[1] Matlabで "GaborWaveletRepresentation.m" を実行してください。

[2] "test image"というフォルダー内のファイルを選んで開いて下さい。
Wavelet変換が実行されて、メインのウインドウ (Figure 1) が表示されます。
ウインドウはリサイズできます。

[3] 右上の円形のプロットの下にある"show pyramid"ボタンを押すと、
ガボールWavelet変換の結果が、大きい方から6スケール分別ウインドウ（Figure 2）に表示されます。
ウインドウはリサイズできます。
最小スケールは時間がかかるため表示から外しています。
くさび形のペアが、対応するwaveletの係数（振幅）を色の濃さで、その角度で
waveletの方位を示しています。

"normalize each scale" というチェックボックスが ONの状態（default)では, 
各スケール毎に色の濃さのスケールを最大限使うため、正規化して表示します。
これがOFFの状態だと, 全スケールを共通の最大値に正規化します. これは
Wavelet変換の結果の表示だけに関係しており、画像の再構成には影響しません。

[4] ウィンドウ中央下の "add N wavelets"ボタンを押すと 
(ボタン右の N の値をオプションで変更してから).
アニメーションが始まります。Waveletの係数が大きいものから順に１個ずつ
"Sum of Gabors"という左下の画像領域に重ね書き（加算）していきます。
## バージョンv1.06から、このボタンで加算のアニメーションを停められる
ようになりました。

左中央の"fast-slow" スライダーにより, Wavelet加算アニメーションの
スピードを変化させることができます。

中央下の"Wavelet Added"には、最後に左の画像に加算されたwaveletを
最大コントラストで表示しています。実際に加算されたwaveletは係数がかかっていて
もっとコントラストが低い（薄い）ので、アニメーションの始めの値の
大きなwaveletしか見えません。ことため、最大コントラストに正規化しています。

Wavelet加算アニメーションの動作中には、右上の"Scale & Orientation"という
極座標プロットに、最後に加算されたwaveletの空間周波数（スケール）と方位が表示されます。
加算されたwaveletの場所は、中央下の"Wavelet Added"に表示されています。

Waveletが数百なり加算された後に, "Scale & Orientation"の何処かをクリックすると、
その空間周波数（スケール）と方位を持つwaveletがどの場所に加算されたのかが、上部
中央の"Position Select"内に、白く表示されます。

[5] 現在の画像の再構成を最初からやり直すときは"reset"ボタンを押して下さい。あるいは、
別の画像をロードして試したい時は"load" ボタンを押してステップ[2]に戻って下さい。

[6] Matlabがサポートする画像であれば、極端に大きな物でない限り直接ロードできます。
計算時に128x128のグレースケール画像に落としてから、処理をしています。

---------------------------------------------------------------------
追加のデモとして、空間周波数フィルタリングの

[0a] 上の [1] と [2] の通りに始める.

[1a] 極座標の "Scale & Orientation" で空間周波数（スケール）と方位と
方位を選びます。

[2a] 中央上の"Position Select" の下にある"select all"ボタンを押すと
場所が全選択されます。つまり、指定されたwaveletを全部使って再構成します。

[3a] この結果は"Sum of Gabors" に表示されます。これは、選択された
waveletだけでV1ができているとしたら、画像がどう見えるかを示しています。
すなわち、選択された受容野を持つ空間フィルターで画像をフィルタリングした
結果の画像になっています。

(この処理をした画像例: appimages/OrientedSF-Filtering.png)

[4a] 別のwaveletによるフィルタリングの結果を見たい場合は"reset"ボタンで
を押して、[1a]に戻って下さい.

Enjoy!
---------------------------------------------------------------------


サンプル画像がいくつか付いていますが、これ以外にも
ご自分で用意された画像で試してみる事ができます。ピクセル数の
上限は調べていませんが、1400x1400程度の画像では大丈夫でした。
計算は128x128に落としてやっています。

よかったらお試しください。

大澤
P.S.
MatlabのGUIは汚くて、コンパイルしてもOS Xのスタンダードには
到底及びませんが、それはCocoaで書き直さない限りどうしようも無いので、
ご容赦を。

ーーendーー
